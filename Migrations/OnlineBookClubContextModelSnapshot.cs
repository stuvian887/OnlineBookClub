// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineBookClub.Models;

#nullable disable

namespace OnlineBookClub.Migrations
{
    [DbContext(typeof(OnlineBookClubContext))]
    partial class OnlineBookClubContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineBookClub.Models.Answer_Record", b =>
                {
                    b.Property<int>("AR_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AR_Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("AnswerDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Learn_Id")
                        .HasColumnType("int");

                    b.Property<bool?>("Pass")
                        .HasColumnType("bit");

                    b.Property<int>("Topic_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.Property<int>("times")
                        .HasColumnType("int");

                    b.HasKey("AR_Id")
                        .HasName("PK__Answer_R__003ED5F23A33418F");

                    b.HasIndex("Learn_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Answer_Record");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Book", b =>
                {
                    b.Property<int>("Book_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Book_Id"));

                    b.Property<string>("BookName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Plan_Id")
                        .HasColumnType("int");

                    b.HasKey("Book_Id")
                        .HasName("PK__Book__C223F3B44BA23E96");

                    b.HasIndex("Plan_Id");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("OnlineBookClub.Models.BookPlan", b =>
                {
                    b.Property<int>("Plan_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Plan_Id"));

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Plan_Goal")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Plan_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Plan_Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Plan_Id")
                        .HasName("PK__BookPlan__9BAF9B03783099CE");

                    b.HasIndex("User_Id");

                    b.ToTable("BookPlan");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Learn", b =>
                {
                    b.Property<int>("Learn_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Learn_Id"));

                    b.Property<DateTime>("DueTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Learn_Index")
                        .HasColumnType("int");

                    b.Property<string>("Learn_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Pass_Standard")
                        .HasColumnType("int");

                    b.Property<int>("Plan_Id")
                        .HasColumnType("int");

                    b.HasKey("Learn_Id")
                        .HasName("PK__Learn__319993003FCD92E2");

                    b.HasIndex("Plan_Id");

                    b.ToTable("Learn");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Members", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_Id"));

                    b.Property<string>("AuthCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("User_Id")
                        .HasName("PK__Members__206D917091A37B8D");

                    b.HasIndex(new[] { "Email" }, "UQ__Members__A9D105349BEE5E48")
                        .IsUnique();

                    b.ToTable("Members");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Notice", b =>
                {
                    b.Property<int>("Notice_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Notice_Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("NoticeTime")
                        .HasColumnType("datetime");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Notice_Id")
                        .HasName("PK__Notice__E9930CABDF4AF963");

                    b.HasIndex("User_Id");

                    b.ToTable("Notice");
                });

            modelBuilder.Entity("OnlineBookClub.Models.PlanMembers", b =>
                {
                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.Property<int>("Plan_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("User_Id", "Plan_Id")
                        .HasName("PK__PlanMemb__09D768C0FA70A000");

                    b.HasIndex("Plan_Id");

                    b.ToTable("PlanMembers");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Post", b =>
                {
                    b.Property<int>("Post_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Post_Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Img_Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Plan_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Post_Id")
                        .HasName("PK__Post__5875F7ADAF0F4B5B");

                    b.HasIndex("Plan_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Post_Report", b =>
                {
                    b.Property<int>("P_Report_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("P_Report_Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("未審核");

                    b.Property<int>("Post_Id")
                        .HasColumnType("int");

                    b.Property<string>("Report_text")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("P_Report_Id")
                        .HasName("PK__Post_Rep__AF4E25E378CB993A");

                    b.HasIndex("Post_Id");

                    b.ToTable("Post_Report");
                });

            modelBuilder.Entity("OnlineBookClub.Models.ProgressTracking", b =>
                {
                    b.Property<int>("Progress_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Progress_Id"));

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Learn_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Progress_Id")
                        .HasName("PK__Progress__D558797A32C6845B");

                    b.HasIndex("Learn_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("ProgressTracking");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Reply", b =>
                {
                    b.Property<int>("Reply_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Reply_Id"));

                    b.Property<int>("Post_Id")
                        .HasColumnType("int");

                    b.Property<string>("ReplyContent")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReplyImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReplyTime")
                        .HasColumnType("datetime");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Reply_Id")
                        .HasName("PK__Reply__B6633284EB09FCA7");

                    b.HasIndex("Post_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Reply");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Reply_Report", b =>
                {
                    b.Property<int>("R_Report_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("R_Report_Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("未審核");

                    b.Property<int>("Reply_Id")
                        .HasColumnType("int");

                    b.Property<string>("Report_text")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("R_Report_Id")
                        .HasName("PK__Reply_Re__6B66990F81BA8E1F");

                    b.HasIndex("Reply_Id");

                    b.ToTable("Reply_Report");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Statistic", b =>
                {
                    b.Property<int>("Statistics_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Statistics_Id"));

                    b.Property<int>("CopyCount")
                        .HasColumnType("int");

                    b.Property<int>("Plan_Id")
                        .HasColumnType("int");

                    b.Property<int>("UserCount")
                        .HasColumnType("int");

                    b.Property<int>("ViewTimes")
                        .HasColumnType("int");

                    b.HasKey("Statistics_Id")
                        .HasName("PK__Statisti__A2EC2FD97545864C");

                    b.HasIndex("Plan_Id");

                    b.ToTable("Statistic");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Topic", b =>
                {
                    b.Property<int>("Topic_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Topic_Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Learn_Id")
                        .HasColumnType("int");

                    b.Property<string>("Option_A")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Option_B")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Option_C")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Option_D")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Question_Id")
                        .HasColumnType("int");

                    b.HasKey("Topic_Id")
                        .HasName("PK__Topic__8DEAA405DC674108");

                    b.HasIndex("Learn_Id");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Answer_Record", b =>
                {
                    b.HasOne("OnlineBookClub.Models.Learn", "Learn")
                        .WithMany("Answer_Record")
                        .HasForeignKey("Learn_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Answer_Re__Learn__4E88ABD4");

                    b.HasOne("OnlineBookClub.Models.Members", "User")
                        .WithMany("Answer_Record")
                        .HasForeignKey("User_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Answer_Re__User___4D94879B");

                    b.Navigation("Learn");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Book", b =>
                {
                    b.HasOne("OnlineBookClub.Models.BookPlan", "Plan")
                        .WithMany("Book")
                        .HasForeignKey("Plan_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Book__Plan_Id__440B1D61");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("OnlineBookClub.Models.BookPlan", b =>
                {
                    b.HasOne("OnlineBookClub.Models.Members", "User")
                        .WithMany("BookPlan")
                        .HasForeignKey("User_Id")
                        .IsRequired()
                        .HasConstraintName("FK__BookPlan__User_I__3A81B327");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Learn", b =>
                {
                    b.HasOne("OnlineBookClub.Models.BookPlan", "Plan")
                        .WithMany("Learn")
                        .HasForeignKey("Plan_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Learn__Plan_Id__46E78A0C");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Notice", b =>
                {
                    b.HasOne("OnlineBookClub.Models.Members", "User")
                        .WithMany("Notice")
                        .HasForeignKey("User_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Notice__User_Id__412EB0B6");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineBookClub.Models.PlanMembers", b =>
                {
                    b.HasOne("OnlineBookClub.Models.BookPlan", "Plan")
                        .WithMany("PlanMembers")
                        .HasForeignKey("Plan_Id")
                        .IsRequired()
                        .HasConstraintName("FK__PlanMembe__Plan___5EBF139D");

                    b.HasOne("OnlineBookClub.Models.Members", "User")
                        .WithMany("PlanMembers")
                        .HasForeignKey("User_Id")
                        .IsRequired()
                        .HasConstraintName("FK__PlanMembe__User___5DCAEF64");

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Post", b =>
                {
                    b.HasOne("OnlineBookClub.Models.BookPlan", "Plan")
                        .WithMany("Post")
                        .HasForeignKey("Plan_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Post__Plan_Id__3D5E1FD2");

                    b.HasOne("OnlineBookClub.Models.Members", "User")
                        .WithMany("Post")
                        .HasForeignKey("User_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Post__User_Id__3E52440B");

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Post_Report", b =>
                {
                    b.HasOne("OnlineBookClub.Models.Post", "Post")
                        .WithMany("Post_Report")
                        .HasForeignKey("Post_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Post_Repo__Post___59FA5E80");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("OnlineBookClub.Models.ProgressTracking", b =>
                {
                    b.HasOne("OnlineBookClub.Models.Learn", "Learn")
                        .WithMany("ProgressTracking")
                        .HasForeignKey("Learn_Id")
                        .IsRequired()
                        .HasConstraintName("FK__ProgressT__Learn__52593CB8");

                    b.HasOne("OnlineBookClub.Models.Members", "User")
                        .WithMany("ProgressTracking")
                        .HasForeignKey("User_Id")
                        .IsRequired()
                        .HasConstraintName("FK__ProgressT__User___5165187F");

                    b.Navigation("Learn");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Reply", b =>
                {
                    b.HasOne("OnlineBookClub.Models.Post", "Post")
                        .WithMany("Reply")
                        .HasForeignKey("Post_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Reply__Post_Id__49C3F6B7");

                    b.HasOne("OnlineBookClub.Models.Members", "User")
                        .WithMany("Reply")
                        .HasForeignKey("User_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Reply__User_Id__4AB81AF0");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Reply_Report", b =>
                {
                    b.HasOne("OnlineBookClub.Models.Reply", "Reply")
                        .WithMany("Reply_Report")
                        .HasForeignKey("Reply_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Reply_Rep__Reply__5629CD9C");

                    b.Navigation("Reply");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Statistic", b =>
                {
                    b.HasOne("OnlineBookClub.Models.BookPlan", "Plan")
                        .WithMany("Statistic")
                        .HasForeignKey("Plan_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Statistic__Plan___6477ECF3");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Topic", b =>
                {
                    b.HasOne("OnlineBookClub.Models.Learn", "Learn")
                        .WithMany("Topic")
                        .HasForeignKey("Learn_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Topic__Learn_Id__619B8048");

                    b.Navigation("Learn");
                });

            modelBuilder.Entity("OnlineBookClub.Models.BookPlan", b =>
                {
                    b.Navigation("Book");

                    b.Navigation("Learn");

                    b.Navigation("PlanMembers");

                    b.Navigation("Post");

                    b.Navigation("Statistic");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Learn", b =>
                {
                    b.Navigation("Answer_Record");

                    b.Navigation("ProgressTracking");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Members", b =>
                {
                    b.Navigation("Answer_Record");

                    b.Navigation("BookPlan");

                    b.Navigation("Notice");

                    b.Navigation("PlanMembers");

                    b.Navigation("Post");

                    b.Navigation("ProgressTracking");

                    b.Navigation("Reply");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Post", b =>
                {
                    b.Navigation("Post_Report");

                    b.Navigation("Reply");
                });

            modelBuilder.Entity("OnlineBookClub.Models.Reply", b =>
                {
                    b.Navigation("Reply_Report");
                });
#pragma warning restore 612, 618
        }
    }
}
